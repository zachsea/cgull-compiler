/* Example #8 - Types and Casting
 * This example shows implicit and explicit casting, strongly typed variables,
 * and the various primitives available.
 */

fn main() -> int {
    bool b = true;
    int i = 2147483647;
    long l = 9223372036854775807;
    float f = 3.141592653589793;

    // printing scalar types
    println("Boolean value: " + b);
    println("Int value: " + i);
    println("Long value: " + l);
    println("Float value: " + f);

    // smaller to larger type implicit casting
    long int_to_long = i;     // int -> long

    println("\nImplicit casting:");
    println("int to long: " + int_to_long);

    // Explicit casting with 'as'
    println("\nExplicit casting with 'as':");
    int float_to_int = f as int;  // float -> int (truncation)

    println("float to int: " + float_to_int);

    return 0;
}

/* expected output
 * The expected output may change depending on the lengths of the types on a per system basis, this language
 * only provides a lower bound on the size of the types, so the output may vary.
 * The output will show the values of the various types before and after casting.
 */
