/* Example #12 - Interfaces
 * This examples shows non-generic interfaces and using them in structs.
 * It also demonstrates upcasting and downcasting.
 */

interface IAnimal {
  fn sound() -> string;
  fn move() -> string;
}

interface IShape {
  fn area() -> float;
  fn perimeter() -> float;
}

struct CircleDog : IAnimal, IShape {
  float radius;
  string name;

  fn sound() -> string {
    return "woof.";
  }

  fn move() -> string {
    return "runs in circles.";
  }

  fn area() -> float {
    return 3.14 * radius * radius;
  }

  fn perimeter() -> float {
    return 2 * 3.14 * radius;
  }
}

struct Owner {
  string name;
  IAnimal pet;

  fn introduce() -> string {
    return "My name is " + name + " and my pet " + pet.sound() + " " + pet.move();
  }
}

fn main() -> int {
  CircleDog dog = CircleDog(5.0, "Buddy");
  IShape shape = dog; // upcasting to IShape
  IAnimal animal = dog; // upcasting to IAnimal

  Owner owner = Owner("Alice", dog); // dog is an IAnimal
  println(owner.introduce());
  println("Area of the shape: " + shape.area());
  println("Perimeter of the shape: " + shape.perimeter());
  println("Dog's sound: " + animal.sound());
  println("Dog's movement: " + animal.move());
  println("Dog's area: " + dog.area());
  println("Dog's perimeter: " + dog.perimeter());
  println("Dog's name: " + dog.name);
  println("Dog's radius: " + dog.radius);
}

/* expected output:
 * My name is Alice and my pet woof. runs in circles.
 * Area of the shape: 78.5
 * Perimeter of the shape: 31.400000
 * Dog's sound: woof.
 * Dog's movement: runs in circles.
 * Dog's area: 78.5
 * Dog's perimeter: 31.400000
 * Dog's name: Buddy
 * Dog's radius: 5.0
 */
