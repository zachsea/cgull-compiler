fn main() {
  // mismatched type
  int* ptr = allocate float(5);
  // mismatched type
  float* ptr2 = allocate int(241);
  *ptr = 10;

  println("Value of ptr: " + *ptr);
  println("Value of ptr2: " + *ptr2);

  // mismatched type
  int andResult = ((ptr as int) & (ptr2 as int)) as string;
  int orResult = (ptr as int) | (ptr2 as int);
  int xorResult = (ptr as int) ^ (ptr2 as int);
  int notResult = ~(ptr as int);

  println("Bitwise actions on the pointer hashes p1 " + (ptr as int) + " and p2 " + (ptr2 as int));
  println("Bitwise AND: " + andResult);
  println("Bitwise OR: " + orResult);
  println("Bitwise XOR: " + xorResult);
  println("Bitwise NOT (ptr): " + notResult);

  // mismatched return type
  return 0;
}
