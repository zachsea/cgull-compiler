// missing node type definition, resolution error

fn printNodes(Node* head) -> void {
  if (!head) {
    return;
  }
  println(head->value);
  printNodes(head->next);
}

fn getNeighbors(Node* head, string c) -> (Node*, Node*) {
  Node* prev = nullptr;
  Node* curr = head;
  Node* next = nullptr;
  for (curr != nullptr) {
    if (curr->value == c) {
      next = curr->next;
      break;
    }
    prev = curr;
    curr = curr->next;
  }
  return (prev, next);
}

fn main() -> int {
  Node* head = allocate Node("A", nullptr);
  head->next = allocate Node("B", nullptr);
  head->next->next = allocate Node("C", nullptr);
  head->next->next->next = nullptr;

  printNodes(head);
  Node* prev, Node* next = getNeighbors(head, "B");

  println("Previous of B: " + (if (prev) prev->value else " "));
  println("Next of B: " + (if (next) next->value else " "));

  return 0;
}
