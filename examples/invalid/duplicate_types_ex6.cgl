struct Point {
  private {
    tuple<int, int> coords = (0, 0);
  }
  private float secret = 0.0;
  public string name = "Point";

  public {
    fn getCoords() -> tuple<int, int> {
      return coords;
    }
    fn setCoords(int x, int y) {
      coords = (x, y);
    }
  }
}

// duplicate type definition error
struct Point {
  private {
    tuple<int, int> coords = (0, 0);
  }
  private float secret = 0.0;
}

fn returnsMultiple() -> (int, int) {
  return (1, 2);
}

fn main() -> int {
  Point p1 = Point("Point");
  Point p2 = Point("Point 2");
  p1.setCoords(1, 2);
  p2.setCoords(3, 4);

  int x1, int y1 = p1.getCoords();
  int x2, int y2 = p2.getCoords();
  println("p1: " + p1.name + " (" + x1 + ", " + y1 + ")");
  println("p2: " + p2.name + " (" + x2 + ", " + y2 + ")");

  tuple<int, int> test = returnsMultiple();
  println("test: (" + test[0] + ", " + test[1] + ")");

  return 0;
}
