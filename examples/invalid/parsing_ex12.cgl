struct Row {
  int x;
  int y;
  float z;
}

struct Pair {
  int a;
  int b;
}

fn swap(Pair p) -> Pair {
  return Pair(p.b, p.a);
}

fn multiply(Row t1, Row t2) -> Row {
  // missing semicolon in return statement
  return Row(t1.x * t2.x, t1.y * t2.y, t1.z * t2.z)
}

fn main() {
  int a = 5;
  int b = 10;
  // missing closing parenthesis in function call
  Pair swapped = swap(Pair(a, b);
  println("Original values: " + a + ", " + b);
  println("Swapped values: " + swapped.a + ", " + swapped.b);

  Row t1 = Row(1, 2, 3.0);
  Row t2 = Row(4, 5, 6.0);
  Row result = multiply(t1, t2);
  // incorrect string concatenation syntax
  println("t1: " + t1.x, ", " + t1.y + ", " + t1.z);
  println("t2: " + t2.x + ", " + t2.y + ", " + t2.z);
  println("Result: " + result.x + ", " + result.y + ", " + result.z);
  // unescaped quote in string
  println("This is a string with an unescaped quote: "Hello World"");
}

// missing opening multicomment
*/
