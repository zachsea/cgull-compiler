/* Example #12 - Miscellaneous 4
 * Due to feature removal, the following is just a random example.
 * This example showcases more usages of structs as pure data containers.
 */

struct Row {
  int x;
  int y;
  float z;
}

struct Pair {
  int a;
  int b;
}

fn swap(Pair p) -> Pair {
  return Pair(p.b, p.a);
}

fn multiply(Row t1, Row t2) -> Row {
  return Row(t1.x * t2.x, t1.y * t2.y, t1.z * t2.z);
}

fn main() {
  int a = 5;
  int b = 10;
  Pair swapped = swap(Pair(a, b));
  println("Original values: " + a + ", " + b);
  println("Swapped values: " + swapped.a + ", " + swapped.b);

  Row t1 = Row(1, 2, 3.0);
  Row t2 = Row(4, 5, 6.0);
  Row result = multiply(t1, t2);
  println("t1: " + t1.x + ", " + t1.y + ", " + t1.z);
  println("t2: " + t2.x + ", " + t2.y + ", " + t2.z);
  println("Result: " + result.x + ", " + result.y + ", " + result.z);
}

/* expected output:
 * Original values: 5, 10
 * Swapped values: 10, 5
 * t1: 1, 2, 3.0
 * t2: 4, 5, 6.0
 * Result: 4, 10, 18.0
 */
