/* Example #11 - Operations
 * This example showcases operations for pointers (dereferencing),
 * and miscellaneous bitwise operations (and, or, xor, not).
 */

fn main() {
  int* ptr = allocate int(5);
  int* ptr2 = allocate int(241);
  *ptr = 10;

  println("Value of ptr: " + *ptr);
  println("Value of ptr2: " + *ptr2);

  // Bitwise operations (on the pointer hashes)
  int andResult = (ptr as int) & (ptr2 as int);
  int orResult = (ptr as int) | (ptr2 as int);
  int xorResult = (ptr as int) ^ (ptr2 as int);
  int notResult = ~(ptr as int);

  println("Bitwise actions on the pointer hashes p1 " + (ptr as int) + " and p2 " + (ptr2 as int));
  println("Bitwise AND: " + andResult);
  println("Bitwise OR: " + orResult);
  println("Bitwise XOR: " + xorResult);
  println("Bitwise NOT (ptr): " + notResult);
}

/* expected output:
 * Value of ptr: 10
 * Value of ptr2: 241
 * Bitwise actions on the pointer hashes p1 <hash of ptr> and p2 <hash of ptr2>
 * Bitwise AND: <result>
 * Bitwise OR: <result>
 * Bitwise XOR: <result>
 * Bitwise NOT (ptr): <result>
 */
